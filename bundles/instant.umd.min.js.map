{"version":3,"sources":["null","ng://instant/lib/grid/column.directive.ts","ng://instant/lib/grid/grid.component.ts","ng://instant/lib/grid/toolbar/grid-toolbar.component.ts","ng://instant/lib/grid/row-menu/grid-row-menu.component.ts","ng://instant/lib/grid/grid.module.ts","ng://instant/lib/grid/datasource.ts","ng://instant/lib/toolbar/breadcrumb/breadcrumb.component.ts","ng://instant/lib/toolbar/toolbar.service.ts","ng://instant/lib/toolbar/form-actions/form-actions.component.ts","ng://instant/lib/toolbar/form-actions/form-actions-def.directive.ts","ng://instant/lib/toolbar/toolbar.module.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","ColumnDirective","ReplaySubject","prototype","ngOnInit","this","label","name","setFilter","obj","oldFilter","filter","active","filterValue","filterOpen","Directive","args","selector","Input","ContentChild","GridComponent","elRef","EventEmitter","defineProperty","_displayedColumns","columns","map","c","v","ngAfterContentInit","length","dataSource","db","_configure","sortChange","sort","filterChange","merge","apply","arguments","concat","__spread","ngOnDestroy","subscriptions","f","unsubscribe","onRowClicked","row","$event","target","closest","cellName","slice","classList","find","indexOf","substr","rowClicked","emit","data","colName","onClick","headersToClose","nativeElement","querySelectorAll","contains","includes","forEach","checkClose","menuTrigger","key","closeMenu","Component","template","styles","ElementRef","ContentChildren","Output","ViewChild","MatSort","HostListener","GridToolbarComponent","pageHandler","pageSize","page","pageIndex","pageChange","GridRowMenuComponent","grid","_this","cell","index","children","dataSnapshot","showMenu","GridModule","NgModule","imports","CommonModule","FormsModule","MatTableModule","MatSortModule","MatInputModule","MatCardModule","MatMenuModule","MatButtonModule","MatToolbarModule","MatPaginatorModule","declarations","exports","InstantDataSource","_super","__","constructor","create","tslib_1.__extends","connect","dataChange","disconnect","onDestroy","DataSource","InstantDatabase","BehaviorSubject","onInit","onRead","_dataChangeSubscriber","subscribe","_sortSubscriber","_filterSubscriber","assign","sortCache","direction","filterCache","BreadcrumbComponent","route","router","events","pipe","event","NavigationEnd","nav","console","log","root","routeMap","getBreadcrumbs","s","url","breadcrumbs","ROUTE_DATA_BREADCRUMB","children_1","tslib_1.__values","children_1_1","child","outlet","PRIMARY_OUTLET","snapshot","segment","path","join","breadcrumb","params","ActivatedRoute","Router","ToolbarService","Injectable","providedIn","FormActionsComponent","toolbarService","actionTemplate","FormActionsDefDirective","toolbar","TemplateRef","ToolbarModule","RouterModule","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Input, Directive, TemplateRef, ContentChild, OnInit, ViewChild } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\n\r\n/**\r\n *\r\n */\r\nexport interface ColumnFilter {\r\n  active: string;\r\n  filter: any;\r\n}\r\n\r\n/**\r\n * Column definition for the instant-grid.\r\n * Defines a set of cells and optional filters available for a table column.\r\n */\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'instant-column'\r\n})\r\nexport class ColumnDirective implements OnInit {\r\n  // Inputs\r\n  @Input() name: string;  // Unique identifier for this column.\r\n  @Input() label: string; // Defaults to the identifier of column\r\n  @Input() filterable = true;\r\n  @Input() sortable = true;\r\n\r\n  // Template refs\r\n  @ContentChild('filter') filterRef: TemplateRef<any>;\r\n  @ContentChild('cell') cellRef: TemplateRef<any>;\r\n\r\n\r\n  // Filter properties\r\n  filterOpen: boolean;\r\n  filter = new ReplaySubject<ColumnFilter>();\r\n  filterValue: any;\r\n  private oldFilter: any;\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.label == null) {\r\n      this.label = this.name;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method is invoked directly from the filter template.\r\n   * Any custom implementation of a column filter, must fire this\r\n   * method when user has made choices.\r\n   *\r\n   * @param obj The filter as received from the filter template\r\n   */\r\n  setFilter(obj: any) {\r\n    if (obj !== this.oldFilter) {\r\n      this.filter.next({active: this.name, filter: obj});\r\n      this.filterValue = obj;\r\n      this.oldFilter = obj;\r\n    }\r\n    this.filterOpen = false;\r\n  }\r\n}\r\n\r\n\r\n","import {\r\n  Component, Input, ContentChildren, ViewChild, OnDestroy, AfterContentInit, HostListener,\r\n  ElementRef, EventEmitter, Output\r\n} from '@angular/core';\r\nimport { MatSort, MatMenuTrigger  } from '@angular/material';\r\nimport { Subscription, merge } from 'rxjs';\r\n\r\nimport { InstantDataSource } from './datasource';\r\nimport { ColumnDirective } from './column.directive';\r\n\r\nexport interface RowClickEvent {\r\n  data: any;\r\n  colName: string;\r\n}\r\n@Component({\r\n  selector: 'instant-grid',\r\n  template: `<mat-table #table [dataSource]=\"dataSource\" matSort>\r\n  <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col.name\">\r\n    <!-- Header definition -->\r\n    <mat-header-cell *matHeaderCellDef>\r\n      <header>\r\n        <div class=\"action\" *ngIf=\"col.filterable != false\">\r\n          <mat-menu #appMenu=\"matMenu\">\r\n            <ng-container *ngIf=\"col.filterRef; else defaultFilterTemplate\">\r\n              <ng-container *ngTemplateOutlet=\"col.filterRef;context:{col:col}\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultFilterTemplate>\r\n              <mat-form-field class=\"no-padding\">\r\n                <input matInput placeholder=\"Filter\" (click)=\"$event.stopPropagation()\" (keyup)=\"checkClose($event, menuTrigger)\"  [(ngModel)]=\"col.filterValue\" [ngModelOptions]=\"{standalone:true}\" (change)=\"col.setFilter(col.filterValue)\">\r\n                <button mat-icon-button matSuffix (click)=\"col.setFilter(undefined)\">\r\n                  <i class=\"fa far fa-times fa-fw\"></i>\r\n                </button>\r\n              </mat-form-field>\r\n            </ng-template>\r\n          </mat-menu>\r\n          <button mat-icon-button [matMenuTriggerFor]=\"appMenu\" #menuTrigger=\"matMenuTrigger\">\r\n            <i class=\"fa far fa-fw fa-filter\"></i>\r\n          </button>\r\n        </div>\r\n        <div mat-sort-header class=\"flex-col\" role=\"heading\" *ngIf=\"col.sortable != false\">\r\n          {{ col.label }}\r\n        </div>\r\n        <div class=\"flex-col\" role=\"heading\" *ngIf=\"col.sortable == false\">\r\n          {{ col.label }}\r\n        </div>\r\n      </header>\r\n    </mat-header-cell>\r\n\r\n    <!-- Cell definition -->\r\n    <mat-cell *matCellDef=\"let element\">\r\n      <ng-container *ngIf=\"col.cellRef; else defaultCellTemplate\">\r\n        <ng-container *ngTemplateOutlet=\"col.cellRef;context:{row:element,col:col.name}\"></ng-container>\r\n      </ng-container>\r\n\r\n      <ng-template #defaultCellTemplate>\r\n        {{ element[col.name] }}\r\n      </ng-template>\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;let index=index;\"\r\n           [ngClass]=\"{highlight: index === selectedIndex}\"\r\n           [attr.data-rowIndex]=\"index\"\r\n           (click)=\"onRowClicked(row, $event)\"></mat-row>\r\n</mat-table>\r\n`,\r\n  styles: [`[role=columnheader] header{position:relative;display:flex;align-items:center}[role=columnheader]:hover .action>button{visibility:visible}[role=columnheader] [role=heading]{flex:1}:host.striped [role=row]:nth-child(even){background:rgba(0,0,0,.02)}::ng-deep .mat-table{display:table!important;width:100%}::ng-deep .mat-table>.mat-header-row,::ng-deep .mat-table>.mat-row{display:table-row;padding:0;border:none}::ng-deep .mat-table>.mat-header-row>.mat-cell,::ng-deep .mat-table>.mat-header-row>.mat-header-cell,::ng-deep .mat-table>.mat-row>.mat-cell,::ng-deep .mat-table>.mat-row>.mat-header-cell{display:table-cell;height:48px;vertical-align:middle;border-bottom:1px solid rgba(0,0,0,.12);padding-left:3px}::ng-deep .mat-table>.mat-header-row>.mat-cell,::ng-deep .mat-table>.mat-row>.mat-cell{border-left:1px solid rgba(0,0,0,.12)}::ng-deep .no-padding{max-height:3rem;padding:0 16px;overflow:hidden}.action mat-menu{padding:0}.action mat-menu mat-form-field{width:100%;padding:0;margin:0}.mat-icon-button{width:18px}`]\r\n})\r\nexport class GridComponent implements AfterContentInit, OnDestroy {\r\n  @Input() dataSource: InstantDataSource<any>;\r\n  @Input() selectedIndex: number;\r\n  @ContentChildren(ColumnDirective) columns: ColumnDirective[];\r\n  @Output() rowClicked = new EventEmitter<RowClickEvent>();\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  _displayedColumns: string[];\r\n  @Input()\r\n  set displayedColumns(v) { this._displayedColumns = v; }\r\n  get displayedColumns(): string[] {\r\n    return this._displayedColumns = this._displayedColumns || (this.columns ? this.columns.map(c => c.name) : null);\r\n  }\r\n  private subscriptions: Subscription[];\r\n\r\n  constructor(public elRef: ElementRef) { }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.columns && this.columns.length) {\r\n      this.dataSource.db._configure({\r\n        sortChange: this.sort.sortChange,\r\n        filterChange: merge(...this.columns.map(c => c.filter))\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions && this.subscriptions.length) {\r\n      this.subscriptions.map(f => f.unsubscribe());\r\n    }\r\n  }\r\n\r\n  onRowClicked(row, $event) {\r\n    if ($event.target.closest('instant-grid-row-menu') === null) {\r\n      const cellName = [].slice.call($event.target.closest('mat-cell').classList)\r\n        .find(c => c.indexOf('mat-column-') > -1)\r\n        .substr('mat-column-'.length);\r\n\r\n      this.rowClicked.emit({data: row, colName: cellName});\r\n    }\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onClick($event) {\r\n    const headersToClose: string[] = [].slice\r\n      // Find all header cells\r\n      .call(this.elRef.nativeElement.querySelectorAll('mat-header-cell'))\r\n      // Filter away current target\r\n      .filter(b => !b.contains($event.target))\r\n      // Get the name of the column\r\n      .map(b => [].slice.call(b.classList).find(c => c.indexOf('mat-column-') > -1).substr('mat-column-'.length));\r\n\r\n    // If any columns (not including current target) is marked as open close it.\r\n    this.columns.filter(c => headersToClose.includes(c.name)).forEach(c => c.filterOpen = false);\r\n  }\r\n\r\n  checkClose($event: KeyboardEvent, menuTrigger: MatMenuTrigger) {\r\n    if ($event.key === 'Enter') {\r\n      menuTrigger.closeMenu();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { PageEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'instant-grid-toolbar',\r\n  template: `<mat-toolbar>\r\n  <header>\r\n    <ng-content></ng-content>\r\n  </header>\r\n  <mat-paginator [length]=\"total\" [pageSize]=\"pageSize\" (page)=\"pageHandler($event)\" [pageSizeOptions]=\"pageSizeOptions\"> </mat-paginator>\r\n</mat-toolbar>\r\n`,\r\n  styles: [`mat-toolbar header{flex:1}.mat-paginator{background:0 0}`]\r\n})\r\nexport class GridToolbarComponent implements OnInit {\r\n  @Input() page = 0;\r\n  @Output() pageChange = new EventEmitter<PageEvent>();\r\n  @Input() total = 0;\r\n  @Input() pageSize = 10;\r\n  @Input() pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  pageHandler($event: PageEvent) {\r\n    this.pageSize = $event.pageSize;\r\n    this.page = $event.pageIndex;\r\n    this.pageChange.emit($event);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, HostListener } from '@angular/core';\r\nimport { GridComponent } from '../grid.component';\r\n\r\n@Component({\r\n  selector: 'instant-grid-row-menu',\r\n  template: `<mat-menu #rowMenu=\"matMenu\">\r\n  <ng-content></ng-content>\r\n</mat-menu>\r\n\r\n<button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"rowMenu\">\r\n  <i class=\"fa far fa-fw fa-{{ icon }}\"></i>\r\n</button>\r\n`,\r\n  styles: [`:host{position:relative}mat-card{position:absolute;z-index:100;right:0}`]\r\n})\r\nexport class GridRowMenuComponent implements OnInit {\r\n  @Input() row;\r\n  @Input() icon = 'ellipsis-v';\r\n\r\n  showMenu = false;\r\n\r\n  constructor(private grid: GridComponent) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onClick($event) {\r\n    // Find all header cells\r\n    [].slice.call(this.grid.elRef.nativeElement.querySelectorAll('mat-cell.mat-column-actions'))\r\n      // Filter away current target\r\n      .filter(b => !b.contains($event.target))\r\n      // If any row action (not including current target) is marked as open, close it.\r\n      .forEach(cell => {\r\n        const row = cell.closest('mat-row');\r\n        const index = [].slice.call(row.closest('mat-table').children).indexOf(row) - 1; // - 1 because header is also a child.\r\n        this.grid.dataSource.db.dataSnapshot[index].showMenu = false; // Find row object in database snapshot, and mark it closed.\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatTableModule, MatSortModule, MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatPaginatorModule, MatMenuModule\r\n} from '@angular/material';\r\n\r\nimport { GridComponent } from './grid.component';\r\nimport { ColumnDirective } from './column.directive';\r\nimport { GridToolbarComponent } from './toolbar/grid-toolbar.component';\r\nimport { GridRowMenuComponent } from './row-menu/grid-row-menu.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatPaginatorModule,\r\n  ],\r\n  declarations: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ],\r\n  exports: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ]\r\n})\r\nexport class GridModule { }\r\n","import { EventEmitter } from '@angular/core';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { Sort } from '@angular/material';\r\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\r\nimport { ColumnFilter } from './column.directive';\r\n\r\nexport interface ChangeEvent {\r\n  [event: string]: {\r\n    active: string,\r\n    direction?: 'asc' | 'desc' | '',\r\n    filter?: any\r\n  };\r\n}\r\n\r\nexport interface Filter {\r\n  [col: string]: any;\r\n}\r\n\r\nexport interface Sorter {\r\n  [col: string]: 'asc' | 'desc' | '';\r\n}\r\n\r\n/**\r\n * This is the object the Mat Table actually uses.\r\n * It holds an `InstantDatabase` object, and deliveres\r\n * living data from this object to the grid.\r\n */\r\nexport class InstantDataSource<T> extends DataSource<T> {\r\n  constructor(public db: InstantDatabase<T>) {\r\n    super();\r\n  }\r\n  connect(): Observable<T[]> {\r\n    return this.db.dataChange;\r\n  }\r\n  disconnect() {\r\n    this.db.onDestroy();\r\n  }\r\n}\r\n\r\n/**\r\n * An object responsible for listening for user changes in\r\n * the grid, and modifying the data accordingly.\r\n *\r\n * Implementors should listen for events in the `onClientChange`\r\n * method and delivar data to the `dataChange` Subject.\r\n */\r\nexport abstract class InstantDatabase<T> {\r\n  sortChange: EventEmitter<Sort>;\r\n  private sortCache: Sorter = {};\r\n  private _sortSubscriber: Subscription;\r\n\r\n  filterChange: Observable<ColumnFilter> = new BehaviorSubject(null);\r\n  private filterCache: Filter = {};\r\n  private _filterSubscriber: Subscription;\r\n\r\n  dataChange: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\r\n  dataSnapshot;\r\n  private _dataChangeSubscriber: Subscription;\r\n\r\n  onInit() {\r\n    this.onRead();\r\n    this._dataChangeSubscriber = this.dataChange.subscribe(data => this.dataSnapshot = data);\r\n  }\r\n  onDestroy() {\r\n    this._dataChangeSubscriber.unsubscribe();\r\n    this._sortSubscriber.unsubscribe();\r\n    this._filterSubscriber.unsubscribe();\r\n  }\r\n  onRead(sort?: Sorter, filter?: Filter) {}\r\n\r\n  _configure(args: Partial<InstantDatabase<T>>) {\r\n    Object.assign(this, args);\r\n\r\n    // On any changes, read data\r\n    this._sortSubscriber = this.sortChange.subscribe(sort => {\r\n      this.sortCache = {}; // Reset always. Multiple column sort is NOT supported\r\n      this.sortCache[sort.active] = sort.direction;\r\n      this.onRead(this.sortCache, this.filterCache);\r\n    });\r\n    this._filterSubscriber = this.filterChange.subscribe(filter => {\r\n      this.filterCache[filter.active] = filter.filter;\r\n      this.onRead(this.sortCache, this.filterCache);\r\n    });\r\n\r\n    // Attached to a grid. Run init\r\n    if (this.onInit) { this.onInit(); }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd, Params, ActivatedRoute, PRIMARY_OUTLET } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nexport interface IBreadcrumb {\r\n  label: string;\r\n  params: Params;\r\n  url: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'instant-breadcrumb',\r\n  template: `<a [routerLink]=\"['/']\"><i class=\"fa far fa-fw fa-home\"></i></a>\r\n<a *ngFor=\"let route of routeMap\" [routerLink]=\"[route.url]\">{{ route.label }}</a>\r\n`,\r\n  styles: [`:host{flex:1}`]\r\n})\r\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\r\n\r\n  routeMap: IBreadcrumb[];\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.push(this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(nav => {\r\n      console.log('url changed');\r\n      const root: ActivatedRoute = this.route.root;\r\n      this.routeMap = this.getBreadcrumbs(root);\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(s => { if (s) { s.unsubscribe(); } });\r\n  }\r\n\r\n  /**\r\n   * Returns array of IBreadcrumb objects that represent the breadcrumb\r\n   *\r\n   * @param route\r\n   * @param url\r\n   * @param breadcrumbs\r\n   */\r\n  private getBreadcrumbs(route: ActivatedRoute, url: string= '', breadcrumbs: IBreadcrumb[]= []): IBreadcrumb[] {\r\n    const ROUTE_DATA_BREADCRUMB = 'breadcrumb';\r\n\r\n    // get the child routes\r\n    const children: ActivatedRoute[] = route.children;\r\n\r\n    // return if there are no more children\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    // iterate over each children\r\n    for (const child of children) {\r\n      // verify primary route\r\n      if (child.outlet !== PRIMARY_OUTLET) {\r\n        continue;\r\n      }\r\n\r\n      // verify the custom data property \"breadcrumb\" is specified on the route\r\n      if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\r\n        return this.getBreadcrumbs(child, url, breadcrumbs);\r\n      }\r\n\r\n      // get the route's URL segment\r\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\r\n\r\n      // append route URL to URL\r\n      url += `/${routeURL}`;\r\n\r\n      // add breadcrumb\r\n      const breadcrumb: IBreadcrumb = {\r\n        label: child.snapshot.data[ROUTE_DATA_BREADCRUMB],\r\n        params: child.snapshot.params,\r\n        url: url\r\n      };\r\n      breadcrumbs.push(breadcrumb);\r\n\r\n      // recursive\r\n      return this.getBreadcrumbs(child, url, breadcrumbs);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolbarService {\r\n\r\n  actionTemplate: TemplateRef<any>;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, ContentChildren, TemplateRef } from '@angular/core';\r\nimport { FormActionsDefDirective } from './form-actions-def.directive';\r\nimport { ToolbarService } from '../toolbar.service';\r\n\r\n@Component({\r\n  selector: 'instant-form-actions',\r\n  template: `<ng-container *ngIf=\"actionsRef; else defaultTemplate\">\r\n  <ng-container *ngTemplateOutlet=\"actionsRef\"></ng-container>\r\n</ng-container>\r\n\r\n<ng-template #defaultTemplate></ng-template>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class FormActionsComponent {\r\n\r\n  get actionsRef(): TemplateRef<any> { return this.toolbarService.actionTemplate; }\r\n\r\n  constructor(private toolbarService: ToolbarService) { }\r\n\r\n}\r\n","import { Directive, TemplateRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { ToolbarService } from '../toolbar.service';\r\n\r\n@Directive({\r\n  selector: '[instantFormActionsDef]'\r\n})\r\nexport class FormActionsDefDirective implements OnInit, OnDestroy {\r\n  constructor(public template: TemplateRef<any>, private toolbar: ToolbarService) { }\r\n\r\n  ngOnInit() {\r\n    this.toolbar.actionTemplate = this.template;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.toolbar.actionTemplate = null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\r\nimport { FormActionsComponent } from './form-actions/form-actions.component';\r\nimport { FormActionsDefDirective } from './form-actions/form-actions-def.directive';\r\nimport { ToolbarService } from './toolbar.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\r\n  exports: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\r\n  providers: [ToolbarService]\r\n})\r\nexport class ToolbarModule { }\r\n"]}