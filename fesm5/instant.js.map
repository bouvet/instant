{"version":3,"file":"instant.js.map","sources":["ng://instant/lib/grid/datasource.ts","ng://instant/lib/grid/column.directive.ts","ng://instant/lib/grid/grid.component.ts","ng://instant/lib/grid/toolbar/grid-toolbar.component.ts","ng://instant/lib/grid/row-menu/grid-row-menu.component.ts","ng://instant/lib/grid/grid.module.ts","ng://instant/lib/toolbar/breadcrumb/breadcrumb.component.ts","ng://instant/lib/toolbar/toolbar.service.ts","ng://instant/lib/toolbar/form-actions/form-actions.component.ts","ng://instant/lib/toolbar/form-actions/form-actions-def.directive.ts","ng://instant/lib/toolbar/toolbar.module.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Sort } from '@angular/material';\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\nimport { ColumnFilter } from './column.directive';\n\nexport interface ChangeEvent {\n  [event: string]: {\n    active: string,\n    direction?: 'asc' | 'desc' | '',\n    filter?: any\n  };\n}\n\nexport interface Filter {\n  [col: string]: any;\n}\n\nexport interface Sorter {\n  [col: string]: 'asc' | 'desc' | '';\n}\n\n/**\n * This is the object the Mat Table actually uses.\n * It holds an `InstantDatabase` object, and deliveres\n * living data from this object to the grid.\n */\nexport class InstantDataSource<T> extends DataSource<T> {\n  constructor(public db: InstantDatabase<T>) {\n    super();\n  }\n  connect(): Observable<T[]> {\n    return this.db.dataChange;\n  }\n  disconnect() {\n    this.db.onDestroy();\n  }\n}\n\n/**\n * An object responsible for listening for user changes in\n * the grid, and modifying the data accordingly.\n *\n * Implementors should listen for events in the `onClientChange`\n * method and delivar data to the `dataChange` Subject.\n */\nexport abstract class InstantDatabase<T> {\n  sortChange: EventEmitter<Sort>;\n  private sortCache: Sorter = {};\n  private _sortSubscriber: Subscription;\n\n  filterChange: Observable<ColumnFilter> = new BehaviorSubject(null);\n  private filterCache: Filter = {};\n  private _filterSubscriber: Subscription;\n\n  dataChange: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\n  dataSnapshot;\n  private _dataChangeSubscriber: Subscription;\n\n  onInit() {\n    this.onRead();\n    this._dataChangeSubscriber = this.dataChange.subscribe(data => this.dataSnapshot = data);\n  }\n  onDestroy() {\n    this._dataChangeSubscriber.unsubscribe();\n    this._sortSubscriber.unsubscribe();\n    this._filterSubscriber.unsubscribe();\n  }\n  onRead(sort?: Sorter, filter?: Filter) {}\n\n  _configure(args: Partial<InstantDatabase<T>>) {\n    Object.assign(this, args);\n\n    // On any changes, read data\n    this._sortSubscriber = this.sortChange.subscribe(sort => {\n      this.sortCache = {}; // Reset always. Multiple column sort is NOT supported\n      this.sortCache[sort.active] = sort.direction;\n      this.onRead(this.sortCache, this.filterCache);\n    });\n    this._filterSubscriber = this.filterChange.subscribe(filter => {\n      this.filterCache[filter.active] = filter.filter;\n      this.onRead(this.sortCache, this.filterCache);\n    });\n\n    // Attached to a grid. Run init\n    if (this.onInit) { this.onInit(); }\n  }\n}\n\n","import { Input, Directive, TemplateRef, ContentChild, OnInit, ViewChild } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n *\n */\nexport interface ColumnFilter {\n  active: string;\n  filter: any;\n}\n\n/**\n * Column definition for the instant-grid.\n * Defines a set of cells and optional filters available for a table column.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'instant-column'\n})\nexport class ColumnDirective implements OnInit {\n  // Inputs\n  @Input() name: string;  // Unique identifier for this column.\n  @Input() label: string; // Defaults to the identifier of column\n  @Input() filterable = true;\n  @Input() sortable = true;\n  @Input() sticky = false;\n\n  // Template refs\n  @ContentChild('filter') filterRef: TemplateRef<any>;\n  @ContentChild('cell') cellRef: TemplateRef<any>;\n\n\n  // Filter properties\n  filterOpen: boolean;\n  filter = new ReplaySubject<ColumnFilter>();\n  filterValue: any;\n  private oldFilter: any;\n\n  /**\n   *\n   */\n  constructor() { }\n\n  ngOnInit() {\n    if (this.label == null) {\n      this.label = this.name;\n    }\n  }\n\n  /**\n   * This method is invoked directly from the filter template.\n   * Any custom implementation of a column filter, must fire this\n   * method when user has made choices.\n   *\n   * @param obj The filter as received from the filter template\n   */\n  setFilter(obj: any) {\n    if (obj !== this.oldFilter) {\n      this.filter.next({active: this.name, filter: obj});\n      this.filterValue = obj;\n      this.oldFilter = obj;\n    }\n    this.filterOpen = false;\n  }\n}\n\n\n","import 'element-closest';\nimport {\n  Component, Input, ContentChildren, ViewChild, OnDestroy, AfterContentInit, HostListener,\n  ElementRef, EventEmitter, Output\n} from '@angular/core';\nimport { MatSort, MatMenuTrigger } from '@angular/material';\nimport { Subscription, merge } from 'rxjs';\n\nimport { InstantDataSource } from './datasource';\nimport { ColumnDirective } from './column.directive';\n\nexport interface RowClickEvent {\n  data: any;\n  colName: string;\n}\n@Component({\n  selector: 'instant-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements AfterContentInit, OnDestroy {\n  @Input() dataSource: InstantDataSource<any>;\n  @Input() selectedIndex: number;\n  @Input() sticky: boolean;\n  @Input() rowAttributes: Array<any>;\n  @ContentChildren(ColumnDirective) columns: ColumnDirective[];\n  @Output() rowClicked = new EventEmitter<RowClickEvent>();\n  @ViewChild(MatSort) sort: MatSort;\n\n  _displayedColumns: string[];\n  @Input()\n  set displayedColumns(v) { this._displayedColumns = v; }\n  get displayedColumns(): string[] {\n    return this._displayedColumns = this._displayedColumns || (this.columns ? this.columns.map(c => c.name) : null);\n  }\n  private subscriptions: Subscription[];\n\n  constructor(public elRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    if (this.columns && this.columns.length) {\n      this.dataSource.db._configure({\n        sortChange: this.sort.sortChange,\n        filterChange: merge(...this.columns.map(c => c.filter))\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions && this.subscriptions.length) {\n      this.subscriptions.map(f => f.unsubscribe());\n    }\n  }\n\n  onRowClicked(row, $event) {\n    if ($event.target.closest('instant-grid-row-menu') === null) {\n      const cellName = [].slice.call($event.target.closest('td').classList)\n        .find(c => c.indexOf('mat-column-') > -1)\n        .substr('mat-column-'.length);\n\n      this.rowClicked.emit({ data: row, colName: cellName });\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick($event) {\n    const headersToClose: string[] = [].slice\n      // Find all header cells\n      .call(this.elRef.nativeElement.querySelectorAll('th'))\n      // Filter away current target\n      .filter(b => !b.contains($event.target))\n      // Get the name of the column\n      .map(b => [].slice.call(b.classList).find(c => c.indexOf('mat-column-') > -1).substr('mat-column-'.length));\n\n    // If any columns (not including current target) is marked as open close it.\n    this.columns.filter(c => headersToClose.includes(c.name)).forEach(c => c.filterOpen = false);\n  }\n\n  checkClose($event: KeyboardEvent, menuTrigger: MatMenuTrigger) {\n    if ($event.key === 'Enter') {\n      menuTrigger.closeMenu();\n    }\n  }\n\n  getRowClasses(index: number) {\n    let classes: string[] = [];\n\n    if (index === this.selectedIndex) {\n      classes.push('highlight');\n    }\n\n    if (this.rowAttributes && this.rowAttributes.length > 0) {\n      const attr = this.rowAttributes;\n      for (let i = 0; i < attr.length; i++) {\n        if (attr[i]['index'] === index) {\n          if (attr[i]['class'] && attr[i]['class'].length > 0) {\n            classes = classes.concat(attr[i]['class']);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { PageEvent } from '@angular/material';\n\n@Component({\n  selector: 'instant-grid-toolbar',\n  templateUrl: './grid-toolbar.component.html',\n  styleUrls: ['./grid-toolbar.component.scss']\n})\nexport class GridToolbarComponent implements OnInit {\n  @Input() page = 0;\n  @Output() pageChange = new EventEmitter<PageEvent>();\n  @Input() total = 0;\n  @Input() pageSize = 10;\n  @Input() pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  pageHandler($event: PageEvent) {\n    this.pageSize = $event.pageSize;\n    this.page = $event.pageIndex;\n    this.pageChange.emit($event);\n  }\n}\n","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { GridComponent } from '../grid.component';\n\n@Component({\n  selector: 'instant-grid-row-menu',\n  templateUrl: './grid-row-menu.component.html',\n  styleUrls: ['./grid-row-menu.component.scss']\n})\nexport class GridRowMenuComponent implements OnInit {\n  @Input() row;\n  @Input() icon = 'ellipsis-v';\n\n  showMenu = false;\n\n  constructor(private grid: GridComponent) { }\n\n  ngOnInit() { }\n\n  @HostListener('document:click', ['$event'])\n  onClick($event) {\n    // Find all header cells\n    [].slice.call(this.grid.elRef.nativeElement.querySelectorAll('mat-cell.mat-column-actions'))\n      // Filter away current target\n      .filter(b => !b.contains($event.target))\n      // If any row action (not including current target) is marked as open, close it.\n      .forEach(cell => {\n        const row = cell.closest('mat-row');\n        const index = [].slice.call(row.closest('mat-table').children).indexOf(row) - 1; // - 1 because header is also a child.\n        this.grid.dataSource.db.dataSnapshot[index].showMenu = false; // Find row object in database snapshot, and mark it closed.\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport {\n  MatTableModule, MatSortModule, MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatPaginatorModule, MatMenuModule\n} from '@angular/material';\n\nimport { GridComponent } from './grid.component';\nimport { ColumnDirective } from './column.directive';\nimport { GridToolbarComponent } from './toolbar/grid-toolbar.component';\nimport { GridRowMenuComponent } from './row-menu/grid-row-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    MatTableModule,\n    MatSortModule,\n    MatInputModule,\n    MatCardModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n  ],\n  declarations: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ],\n  exports: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ]\n})\nexport class GridModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, Params, ActivatedRoute, PRIMARY_OUTLET } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface IBreadcrumb {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  selector: 'instant-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n\n  routeMap: IBreadcrumb[];\n  subscriptions: Subscription[] = [];\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.subscriptions.push(this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(nav => {\n      console.log('url changed');\n      const root: ActivatedRoute = this.route.root;\n      this.routeMap = this.getBreadcrumbs(root);\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => { if (s) { s.unsubscribe(); } });\n  }\n\n  /**\n   * Returns array of IBreadcrumb objects that represent the breadcrumb\n   *\n   * @param route\n   * @param url\n   * @param breadcrumbs\n   */\n  private getBreadcrumbs(route: ActivatedRoute, url: string= '', breadcrumbs: IBreadcrumb[]= []): IBreadcrumb[] {\n    const ROUTE_DATA_BREADCRUMB = 'breadcrumb';\n\n    // get the child routes\n    const children: ActivatedRoute[] = route.children;\n\n    // return if there are no more children\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    // iterate over each children\n    for (const child of children) {\n      // verify primary route\n      if (child.outlet !== PRIMARY_OUTLET) {\n        continue;\n      }\n\n      // verify the custom data property \"breadcrumb\" is specified on the route\n      if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\n        return this.getBreadcrumbs(child, url, breadcrumbs);\n      }\n\n      // get the route's URL segment\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\n\n      // append route URL to URL\n      url += `/${routeURL}`;\n\n      // add breadcrumb\n      const breadcrumb: IBreadcrumb = {\n        label: child.snapshot.data[ROUTE_DATA_BREADCRUMB],\n        params: child.snapshot.params,\n        url: url\n      };\n      breadcrumbs.push(breadcrumb);\n\n      // recursive\n      return this.getBreadcrumbs(child, url, breadcrumbs);\n    }\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolbarService {\n\n  actionTemplate: TemplateRef<any>;\n\n  constructor() { }\n\n}\n","import { Component, ContentChildren, TemplateRef } from '@angular/core';\nimport { FormActionsDefDirective } from './form-actions-def.directive';\nimport { ToolbarService } from '../toolbar.service';\n\n@Component({\n  selector: 'instant-form-actions',\n  templateUrl: './form-actions.component.html',\n  styleUrls: ['./form-actions.component.scss']\n})\nexport class FormActionsComponent {\n\n  get actionsRef(): TemplateRef<any> { return this.toolbarService.actionTemplate; }\n\n  constructor(private toolbarService: ToolbarService) { }\n\n}\n","import { Directive, TemplateRef, OnInit, OnDestroy } from '@angular/core';\nimport { ToolbarService } from '../toolbar.service';\n\n@Directive({\n  selector: '[instantFormActionsDef]'\n})\nexport class FormActionsDefDirective implements OnInit, OnDestroy {\n  constructor(public template: TemplateRef<any>, private toolbar: ToolbarService) { }\n\n  ngOnInit() {\n    this.toolbar.actionTemplate = this.template;\n  }\n\n  ngOnDestroy() {\n    this.toolbar.actionTemplate = null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { FormActionsComponent } from './form-actions/form-actions.component';\nimport { FormActionsDefDirective } from './form-actions/form-actions-def.directive';\nimport { ToolbarService } from './toolbar.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\n  exports: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\n  providers: [ToolbarService]\n})\nexport class ToolbarModule { }\n"],"names":["tslib_1.__extends","filter","tslib_1.__values"],"mappings":"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"}
