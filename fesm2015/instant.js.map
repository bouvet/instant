{"version":3,"file":"instant.js.map","sources":["ng://instant/lib/utils/debounce.ts","ng://instant/lib/grid/datasource.ts","ng://instant/lib/grid/column.directive.ts","ng://instant/lib/grid/grid.component.ts","ng://instant/lib/grid/toolbar/grid-toolbar.component.ts","ng://instant/lib/grid/row-menu/grid-row-menu.component.ts","ng://instant/lib/grid/grid.module.ts","ng://instant/lib/toolbar/breadcrumb/breadcrumb.component.ts","ng://instant/lib/toolbar/toolbar.service.ts","ng://instant/lib/toolbar/form-actions/form-actions.component.ts","ng://instant/lib/toolbar/form-actions/form-actions-def.directive.ts","ng://instant/lib/toolbar/toolbar.module.ts"],"sourcesContent":["export const debounce = function (func, wait = 300, immediate = false) {\n  let timeout;\n  return function(...args) {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) { func.apply(context, args); }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) { func.apply(context, args); }\n  };\n};\n","import { EventEmitter } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Sort } from '@angular/material';\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\nimport { ColumnFilter } from './column.directive';\nimport { debounce } from '../utils/debounce';\n\nexport interface ChangeEvent {\n  [event: string]: {\n    active: string,\n    direction?: 'asc' | 'desc' | '',\n    filter?: any\n  };\n}\n\nexport interface Filter {\n  [col: string]: any;\n}\n\nexport interface Sorter {\n  [col: string]: 'asc' | 'desc' | '';\n}\n\n/**\n * This is the object the Mat Table actually uses.\n * It holds an `InstantDatabase` object, and deliveres\n * living data from this object to the grid.\n */\nexport class InstantDataSource<T> extends DataSource<T> {\n  constructor(public db: InstantDatabase<T>) {\n    super();\n  }\n  connect(): Observable<T[]> {\n    return this.db.dataChange;\n  }\n  disconnect() {\n    this.db.onDestroy();\n  }\n}\n\n/**\n * An object responsible for listening for user changes in\n * the grid, and modifying the data accordingly.\n *\n * Implementors should listen for events in the `onClientChange`\n * method and delivar data to the `dataChange` Subject.\n */\nexport abstract class InstantDatabase<T> {\n  sortChange: EventEmitter<Sort>;\n  private sortCache: Sorter = {};\n  private _sortSubscriber: Subscription;\n\n  filterChange: Observable<ColumnFilter> = new BehaviorSubject(null);\n  private filterCache: Filter = {};\n  private _filterSubscriber: Subscription;\n\n  dataChange: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\n  dataSnapshot;\n  private _dataChangeSubscriber: Subscription;\n  private dataReader = debounce(this.onRead, 100);\n\n  onInit() {\n    this.onRead();\n    this._dataChangeSubscriber = this.dataChange.subscribe(data => this.dataSnapshot = data);\n  }\n  onDestroy() {\n    this._dataChangeSubscriber.unsubscribe();\n    this._sortSubscriber.unsubscribe();\n    this._filterSubscriber.unsubscribe();\n  }\n  onRead(sort?: Sorter, filter?: Filter) {}\n\n  _configure(args: Partial<InstantDatabase<T>>) {\n    Object.assign(this, args);\n\n    // On any changes, read data\n    this._sortSubscriber = this.sortChange.subscribe(sort => {\n      this.sortCache = {}; // Reset always. Multiple column sort is NOT supported\n      this.sortCache[sort.active] = sort.direction;\n      this.dataReader(this.sortCache, this.filterCache);\n    });\n    this._filterSubscriber = this.filterChange.subscribe(filter => {\n      this.filterCache[filter.active] = filter.filter;\n      this.dataReader(this.sortCache, this.filterCache);\n    });\n\n    // Attached to a grid. Run init\n    if (this.onInit) { this.onInit(); }\n  }\n\n\n\n}\n\n","import { Input, Directive, TemplateRef, ContentChild, OnInit, ViewChild } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n *\n */\nexport interface ColumnFilter {\n  active: string;\n  filter: any;\n}\n\n/**\n * Column definition for the instant-grid.\n * Defines a set of cells and optional filters available for a table column.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'instant-column'\n})\nexport class ColumnDirective implements OnInit {\n  // Inputs\n  @Input() name: string;  // Unique identifier for this column.\n  @Input() label: string; // Defaults to the identifier of column\n  @Input() filterable = true;\n  @Input() sortable = true;\n  @Input() sticky = false;\n  @Input('instant-style') instantStyle = {};\n\n  // Template refs\n  @ContentChild('filter') filterRef: TemplateRef<any>;\n  @ContentChild('cell') cellRef: TemplateRef<any>;\n\n\n  // Filter properties\n  filterOpen: boolean;\n  filter = new ReplaySubject<ColumnFilter>();\n  filterValue: any;\n  oldFilter: any;\n\n  /**\n   *\n   */\n  constructor() { }\n\n  ngOnInit() {\n    if (this.label == null) {\n      this.label = this.name;\n    }\n  }\n\n  /**\n   * This method is invoked directly from the filter template.\n   * Any custom implementation of a column filter, must fire this\n   * method when user has made choices.\n   *\n   * @param obj The filter as received from the filter template\n   */\n  setFilter(obj: any, noEmit: boolean = false) {\n    if ((obj !== this.oldFilter) || (obj === null)) {\n      if (!noEmit) {\n        this.filter.next({active: this.name, filter: obj});\n      }\n      this.filterValue = obj;\n      this.oldFilter = obj;\n    }\n    this.filterOpen = false;\n  }\n\n  removeFilter() {\n    this.setFilter(null);\n  }\n}\n\n\n","import 'element-closest';\nimport {\n  Component,\n  Input,\n  ContentChildren,\n  ViewChild,\n  OnDestroy,\n  AfterContentInit,\n  HostListener,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { MatSort, MatMenuTrigger } from '@angular/material';\nimport { Subscription, merge } from 'rxjs';\n\nimport { InstantDataSource } from './datasource';\nimport { ColumnDirective } from './column.directive';\n\nexport interface RowClickEvent {\n  data: any;\n  colName: string;\n}\n@Component({\n  selector: 'instant-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements AfterContentInit, OnDestroy {\n  @Input() dataSource: InstantDataSource<any>;\n  @Input() selectedIndex: number;\n  @Input() sticky: boolean;\n  @Input() rowAttributes: Array<any>;\n  @ContentChildren(ColumnDirective) columns: ColumnDirective[];\n  @Output() rowClicked = new EventEmitter<RowClickEvent>();\n  @ViewChild(MatSort) sort: MatSort;\n\n  _displayedColumns: string[];\n  @Input()\n  set displayedColumns(v) {\n    this._displayedColumns = v;\n  }\n  get displayedColumns(): string[] {\n    return (this._displayedColumns =\n      this._displayedColumns ||\n      (this.columns ? this.columns.map(c => c.name) : null));\n  }\n  private subscriptions: Subscription[];\n\n  constructor(public elRef: ElementRef) {}\n\n  ngAfterContentInit() {\n    if (this.columns && this.columns.length) {\n      this.dataSource.db._configure({\n        sortChange: this.sort.sortChange,\n        filterChange: merge(...this.columns.map(c => c.filter))\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions && this.subscriptions.length) {\n      this.subscriptions.map(f => f.unsubscribe());\n    }\n  }\n\n  onRowClicked(row, $event) {\n    if ($event.target.closest('instant-grid-row-menu') === null) {\n      const cellName = [].slice\n        .call($event.target.closest('td').classList)\n        .find(c => c.indexOf('mat-column-') > -1)\n        .substr('mat-column-'.length);\n\n      this.rowClicked.emit({ data: row, colName: cellName });\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick($event) {\n    const headersToClose: string[] = [].slice\n      // Find all header cells\n      .call(this.elRef.nativeElement.querySelectorAll('th'))\n      // Filter away current target\n      .filter(b => !b.contains($event.target))\n      // Get the name of the column\n      .map(b =>\n        [].slice\n          .call(b.classList)\n          .find(c => c.indexOf('mat-column-') > -1)\n          .substr('mat-column-'.length)\n      );\n\n    // If any columns (not including current target) is marked as open close it.\n    this.columns\n      .filter(c => headersToClose.includes(c.name))\n      .forEach(c => (c.filterOpen = false));\n  }\n\n  checkClose($event: KeyboardEvent, menuTrigger: MatMenuTrigger) {\n    if ($event.key === 'Enter') {\n      menuTrigger.closeMenu();\n    }\n  }\n\n  onFilterChange($event, col) {\n    col.setFilter($event.target.value);\n  }\n\n  getFilterValue(col) {\n    if (col.filterValue) {\n      if (typeof col.filterValue === 'object') {\n        return col.filterValue.key;\n      }\n      return col.filterValue;\n    }\n    return '';\n  }\n\n  getRowClasses(index: number) {\n    let classes: string[] = [];\n\n    if (index === this.selectedIndex) {\n      classes.push('highlight');\n    }\n\n    if (this.rowAttributes && this.rowAttributes.length > 0) {\n      const attr = this.rowAttributes;\n      for (let i = 0; i < attr.length; i++) {\n        if (attr[i]['index'] === index) {\n          if (attr[i]['class'] && attr[i]['class'].length > 0) {\n            classes = classes.concat(attr[i]['class']);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n\n  getRowStyles(index: number) {\n    let styles: string[] = [];\n\n    if (this.rowAttributes && this.rowAttributes.length > 0) {\n      const attr = this.rowAttributes;\n      for (let i = 0; i < attr.length; i++) {\n        if (attr[i]['index'] === index) {\n          if (attr[i]['style'] && attr[i]['style'].length > 0) {\n            styles = styles.concat(attr[i]['style']);\n          }\n        }\n      }\n    }\n    return styles.join(' ');\n  }\n\n  removeFilters() {\n    this.columns.forEach(col => {\n      col.removeFilter();\n    });\n  }\n\n  reload() {\n    this.columns.forEach((col,index) => {\n      if (index === 0) {\n        col.removeFilter();\n      } else {\n        return;\n      }\n    });\n  }\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { PageEvent } from '@angular/material';\n\n@Component({\n  selector: 'instant-grid-toolbar',\n  templateUrl: './grid-toolbar.component.html',\n  styleUrls: ['./grid-toolbar.component.scss']\n})\nexport class GridToolbarComponent implements OnInit {\n  @Input() page = 0;\n  @Output() pageChange = new EventEmitter<PageEvent>();\n  @Input() total = 0;\n  @Input() pageSize = 10;\n  @Input() pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  pageHandler($event: PageEvent) {\n    this.pageSize = $event.pageSize;\n    this.page = $event.pageIndex;\n    this.pageChange.emit($event);\n  }\n}\n","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { GridComponent } from '../grid.component';\n\n@Component({\n  selector: 'instant-grid-row-menu',\n  templateUrl: './grid-row-menu.component.html',\n  styleUrls: ['./grid-row-menu.component.scss']\n})\nexport class GridRowMenuComponent implements OnInit {\n  @Input() row;\n  @Input() icon = 'ellipsis-v';\n\n  showMenu = false;\n\n  constructor(private grid: GridComponent) { }\n\n  ngOnInit() { }\n\n  @HostListener('document:click', ['$event'])\n  onClick($event) {\n    // Find all header cells\n    [].slice.call(this.grid.elRef.nativeElement.querySelectorAll('mat-cell.mat-column-actions'))\n      // Filter away current target\n      .filter(b => !b.contains($event.target))\n      // If any row action (not including current target) is marked as open, close it.\n      .forEach(cell => {\n        const row = cell.closest('mat-row');\n        const index = [].slice.call(row.closest('mat-table').children).indexOf(row) - 1; // - 1 because header is also a child.\n        this.grid.dataSource.db.dataSnapshot[index].showMenu = false; // Find row object in database snapshot, and mark it closed.\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport {\n  MatTableModule, MatSortModule, MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatPaginatorModule, MatMenuModule\n} from '@angular/material';\n\nimport { GridComponent } from './grid.component';\nimport { ColumnDirective } from './column.directive';\nimport { GridToolbarComponent } from './toolbar/grid-toolbar.component';\nimport { GridRowMenuComponent } from './row-menu/grid-row-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    MatTableModule,\n    MatSortModule,\n    MatInputModule,\n    MatCardModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n  ],\n  declarations: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ],\n  exports: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ]\n})\nexport class GridModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, Params, ActivatedRoute, PRIMARY_OUTLET } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface IBreadcrumb {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  selector: 'instant-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n\n  routeMap: IBreadcrumb[];\n  subscriptions: Subscription[] = [];\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.subscriptions.push(this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(nav => {\n      console.log('url changed');\n      const root: ActivatedRoute = this.route.root;\n      this.routeMap = this.getBreadcrumbs(root);\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => { if (s) { s.unsubscribe(); } });\n  }\n\n  /**\n   * Returns array of IBreadcrumb objects that represent the breadcrumb\n   *\n   * @param route\n   * @param url\n   * @param breadcrumbs\n   */\n  private getBreadcrumbs(route: ActivatedRoute, url: string= '', breadcrumbs: IBreadcrumb[]= []): IBreadcrumb[] {\n    const ROUTE_DATA_BREADCRUMB = 'breadcrumb';\n\n    // get the child routes\n    const children: ActivatedRoute[] = route.children;\n\n    // return if there are no more children\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    // iterate over each children\n    for (const child of children) {\n      // verify primary route\n      if (child.outlet !== PRIMARY_OUTLET) {\n        continue;\n      }\n\n      // verify the custom data property \"breadcrumb\" is specified on the route\n      if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\n        return this.getBreadcrumbs(child, url, breadcrumbs);\n      }\n\n      // get the route's URL segment\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\n\n      // append route URL to URL\n      url += `/${routeURL}`;\n\n      // add breadcrumb\n      const breadcrumb: IBreadcrumb = {\n        label: child.snapshot.data[ROUTE_DATA_BREADCRUMB],\n        params: child.snapshot.params,\n        url: url\n      };\n      breadcrumbs.push(breadcrumb);\n\n      // recursive\n      return this.getBreadcrumbs(child, url, breadcrumbs);\n    }\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolbarService {\n\n  actionTemplate: TemplateRef<any>;\n\n  constructor() { }\n\n}\n","import { Component, ContentChildren, TemplateRef } from '@angular/core';\nimport { FormActionsDefDirective } from './form-actions-def.directive';\nimport { ToolbarService } from '../toolbar.service';\n\n@Component({\n  selector: 'instant-form-actions',\n  templateUrl: './form-actions.component.html',\n  styleUrls: ['./form-actions.component.scss']\n})\nexport class FormActionsComponent {\n\n  get actionsRef(): TemplateRef<any> { return this.toolbarService.actionTemplate; }\n\n  constructor(private toolbarService: ToolbarService) { }\n\n}\n","import { Directive, TemplateRef, OnInit, OnDestroy } from '@angular/core';\nimport { ToolbarService } from '../toolbar.service';\n\n@Directive({\n  selector: '[instantFormActionsDef]'\n})\nexport class FormActionsDefDirective implements OnInit, OnDestroy {\n  constructor(public template: TemplateRef<any>, private toolbar: ToolbarService) { }\n\n  ngOnInit() {\n    this.toolbar.actionTemplate = this.template;\n  }\n\n  ngOnDestroy() {\n    this.toolbar.actionTemplate = null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { FormActionsComponent } from './form-actions/form-actions.component';\nimport { FormActionsDefDirective } from './form-actions/form-actions-def.directive';\nimport { ToolbarService } from './toolbar.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\n  exports: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\n  providers: [ToolbarService]\n})\nexport class ToolbarModule { }\n"],"names":["filter"],"mappings":"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"}
