{"version":3,"file":"instant.js.map","sources":["ng://instant/lib/grid/datasource.ts","ng://instant/lib/grid/column.directive.ts","ng://instant/lib/grid/grid.component.ts","ng://instant/lib/grid/toolbar/grid-toolbar.component.ts","ng://instant/lib/grid/row-menu/grid-row-menu.component.ts","ng://instant/lib/grid/grid.module.ts","ng://instant/lib/toolbar/breadcrumb/breadcrumb.component.ts","ng://instant/lib/toolbar/toolbar.service.ts","ng://instant/lib/toolbar/form-actions/form-actions.component.ts","ng://instant/lib/toolbar/form-actions/form-actions-def.directive.ts","ng://instant/lib/toolbar/toolbar.module.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Sort } from '@angular/material';\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\nimport { ColumnFilter } from './column.directive';\n\nexport interface ChangeEvent {\n  [event: string]: {\n    active: string,\n    direction?: 'asc' | 'desc' | '',\n    filter?: any\n  };\n}\n\nexport interface Filter {\n  [col: string]: any;\n}\n\nexport interface Sorter {\n  [col: string]: 'asc' | 'desc' | '';\n}\n\n/**\n * This is the object the Mat Table actually uses.\n * It holds an `InstantDatabase` object, and deliveres\n * living data from this object to the grid.\n */\nexport class InstantDataSource<T> extends DataSource<T> {\n  constructor(public db: InstantDatabase<T>) {\n    super();\n  }\n  connect(): Observable<T[]> {\n    return this.db.dataChange;\n  }\n  disconnect() {\n    this.db.onDestroy();\n  }\n}\n\n/**\n * An object responsible for listening for user changes in\n * the grid, and modifying the data accordingly.\n *\n * Implementors should listen for events in the `onClientChange`\n * method and delivar data to the `dataChange` Subject.\n */\nexport abstract class InstantDatabase<T> {\n  sortChange: EventEmitter<Sort>;\n  private sortCache: Sorter = {};\n  private _sortSubscriber: Subscription;\n\n  filterChange: Observable<ColumnFilter> = new BehaviorSubject(null);\n  private filterCache: Filter = {};\n  private _filterSubscriber: Subscription;\n\n  dataChange: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\n  dataSnapshot;\n  private _dataChangeSubscriber: Subscription;\n\n  onInit() {\n    this.onRead();\n    this._dataChangeSubscriber = this.dataChange.subscribe(data => this.dataSnapshot = data);\n  }\n  onDestroy() {\n    this._dataChangeSubscriber.unsubscribe();\n    this._sortSubscriber.unsubscribe();\n    this._filterSubscriber.unsubscribe();\n  }\n  onRead(sort?: Sorter, filter?: Filter) {}\n\n  _configure(args: Partial<InstantDatabase<T>>) {\n    Object.assign(this, args);\n\n    // On any changes, read data\n    this._sortSubscriber = this.sortChange.subscribe(sort => {\n      this.sortCache = {}; // Reset always. Multiple column sort is NOT supported\n      this.sortCache[sort.active] = sort.direction;\n      this.onRead(this.sortCache, this.filterCache);\n    });\n    this._filterSubscriber = this.filterChange.subscribe(filter => {\n      this.filterCache[filter.active] = filter.filter;\n      this.onRead(this.sortCache, this.filterCache);\n    });\n\n    // Attached to a grid. Run init\n    if (this.onInit) { this.onInit(); }\n  }\n}\n\n","import { Input, Directive, TemplateRef, ContentChild, OnInit, ViewChild } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n *\n */\nexport interface ColumnFilter {\n  active: string;\n  filter: any;\n}\n\n/**\n * Column definition for the instant-grid.\n * Defines a set of cells and optional filters available for a table column.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'instant-column'\n})\nexport class ColumnDirective implements OnInit {\n  // Inputs\n  @Input() name: string;  // Unique identifier for this column.\n  @Input() label: string; // Defaults to the identifier of column\n  @Input() filterable = true;\n  @Input() sortable = true;\n\n  // Template refs\n  @ContentChild('filter') filterRef: TemplateRef<any>;\n  @ContentChild('cell') cellRef: TemplateRef<any>;\n\n\n  // Filter properties\n  filterOpen: boolean;\n  filter = new ReplaySubject<ColumnFilter>();\n  filterValue: any;\n  private oldFilter: any;\n\n  /**\n   *\n   */\n  constructor() { }\n\n  ngOnInit() {\n    if (this.label == null) {\n      this.label = this.name;\n    }\n  }\n\n  /**\n   * This method is invoked directly from the filter template.\n   * Any custom implementation of a column filter, must fire this\n   * method when user has made choices.\n   *\n   * @param obj The filter as received from the filter template\n   */\n  setFilter(obj: any) {\n    if (obj !== this.oldFilter) {\n      this.filter.next({active: this.name, filter: obj});\n      this.filterValue = obj;\n      this.oldFilter = obj;\n    }\n    this.filterOpen = false;\n  }\n}\n\n\n","import {\n  Component, Input, ContentChildren, ViewChild, OnDestroy, AfterContentInit, HostListener,\n  ElementRef, EventEmitter, Output\n} from '@angular/core';\nimport { MatSort, MatMenuTrigger  } from '@angular/material';\nimport { Subscription, merge } from 'rxjs';\n\nimport { InstantDataSource } from './datasource';\nimport { ColumnDirective } from './column.directive';\n\nexport interface RowClickEvent {\n  data: any;\n  colName: string;\n}\n@Component({\n  selector: 'instant-grid',\n  template: `<mat-table #table [dataSource]=\"dataSource\" matSort>\n  <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col.name\">\n    <!-- Header definition -->\n    <mat-header-cell *matHeaderCellDef>\n      <header>\n        <div class=\"action\" *ngIf=\"col.filterable != false\">\n          <mat-menu #appMenu=\"matMenu\">\n            <ng-container *ngIf=\"col.filterRef; else defaultFilterTemplate\">\n              <ng-container *ngTemplateOutlet=\"col.filterRef;context:{col:col}\"></ng-container>\n            </ng-container>\n\n            <ng-template #defaultFilterTemplate>\n              <mat-form-field class=\"no-padding\">\n                <input matInput placeholder=\"Filter\" (click)=\"$event.stopPropagation()\" (keyup)=\"checkClose($event, menuTrigger)\"  [(ngModel)]=\"col.filterValue\" [ngModelOptions]=\"{standalone:true}\" (change)=\"col.setFilter(col.filterValue)\">\n                <button mat-icon-button matSuffix (click)=\"col.setFilter(undefined)\">\n                  <i class=\"fa far fa-times fa-fw\"></i>\n                </button>\n              </mat-form-field>\n            </ng-template>\n          </mat-menu>\n          <button mat-icon-button [matMenuTriggerFor]=\"appMenu\" #menuTrigger=\"matMenuTrigger\">\n            <i class=\"fa far fa-fw fa-filter\"></i>\n          </button>\n        </div>\n        <div mat-sort-header class=\"flex-col\" role=\"heading\" *ngIf=\"col.sortable != false\">\n          {{ col.label }}\n        </div>\n        <div class=\"flex-col\" role=\"heading\" *ngIf=\"col.sortable == false\">\n          {{ col.label }}\n        </div>\n      </header>\n    </mat-header-cell>\n\n    <!-- Cell definition -->\n    <mat-cell *matCellDef=\"let element\">\n      <ng-container *ngIf=\"col.cellRef; else defaultCellTemplate\">\n        <ng-container *ngTemplateOutlet=\"col.cellRef;context:{row:element,col:col.name}\"></ng-container>\n      </ng-container>\n\n      <ng-template #defaultCellTemplate>\n        {{ element[col.name] }}\n      </ng-template>\n    </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;let index=index;\"\n           [ngClass]=\"{highlight: index === selectedIndex}\"\n           [attr.data-rowIndex]=\"index\"\n           (click)=\"onRowClicked(row, $event)\"></mat-row>\n</mat-table>\n`,\n  styles: [`[role=columnheader] header{position:relative;display:flex;align-items:center}[role=columnheader]:hover .action>button{visibility:visible}[role=columnheader] [role=heading]{flex:1}:host.striped [role=row]:nth-child(even){background:rgba(0,0,0,.02)}::ng-deep .mat-table{display:table!important;width:100%}::ng-deep .mat-table>.mat-header-row,::ng-deep .mat-table>.mat-row{display:table-row;padding:0;border:none}::ng-deep .mat-table>.mat-header-row>.mat-cell,::ng-deep .mat-table>.mat-header-row>.mat-header-cell,::ng-deep .mat-table>.mat-row>.mat-cell,::ng-deep .mat-table>.mat-row>.mat-header-cell{display:table-cell;height:48px;vertical-align:middle;border-bottom:1px solid rgba(0,0,0,.12);padding-left:3px}::ng-deep .mat-table>.mat-header-row>.mat-cell,::ng-deep .mat-table>.mat-row>.mat-cell{border-left:1px solid rgba(0,0,0,.12)}::ng-deep .no-padding{max-height:3rem;padding:0 16px;overflow:hidden}.action mat-menu{padding:0}.action mat-menu mat-form-field{width:100%;padding:0;margin:0}.mat-icon-button{width:18px}`]\n})\nexport class GridComponent implements AfterContentInit, OnDestroy {\n  @Input() dataSource: InstantDataSource<any>;\n  @Input() selectedIndex: number;\n  @ContentChildren(ColumnDirective) columns: ColumnDirective[];\n  @Output() rowClicked = new EventEmitter<RowClickEvent>();\n  @ViewChild(MatSort) sort: MatSort;\n\n  _displayedColumns: string[];\n  @Input()\n  set displayedColumns(v) { this._displayedColumns = v; }\n  get displayedColumns(): string[] {\n    return this._displayedColumns = this._displayedColumns || (this.columns ? this.columns.map(c => c.name) : null);\n  }\n  private subscriptions: Subscription[];\n\n  constructor(public elRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    if (this.columns && this.columns.length) {\n      this.dataSource.db._configure({\n        sortChange: this.sort.sortChange,\n        filterChange: merge(...this.columns.map(c => c.filter))\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions && this.subscriptions.length) {\n      this.subscriptions.map(f => f.unsubscribe());\n    }\n  }\n\n  onRowClicked(row, $event) {\n    if ($event.target.closest('instant-grid-row-menu') === null) {\n      const cellName = [].slice.call($event.target.closest('mat-cell').classList)\n        .find(c => c.indexOf('mat-column-') > -1)\n        .substr('mat-column-'.length);\n\n      this.rowClicked.emit({data: row, colName: cellName});\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick($event) {\n    const headersToClose: string[] = [].slice\n      // Find all header cells\n      .call(this.elRef.nativeElement.querySelectorAll('mat-header-cell'))\n      // Filter away current target\n      .filter(b => !b.contains($event.target))\n      // Get the name of the column\n      .map(b => [].slice.call(b.classList).find(c => c.indexOf('mat-column-') > -1).substr('mat-column-'.length));\n\n    // If any columns (not including current target) is marked as open close it.\n    this.columns.filter(c => headersToClose.includes(c.name)).forEach(c => c.filterOpen = false);\n  }\n\n  checkClose($event: KeyboardEvent, menuTrigger: MatMenuTrigger) {\n    if ($event.key === 'Enter') {\n      menuTrigger.closeMenu();\n    }\n  }\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { PageEvent } from '@angular/material';\n\n@Component({\n  selector: 'instant-grid-toolbar',\n  template: `<mat-toolbar>\n  <header>\n    <ng-content></ng-content>\n  </header>\n  <mat-paginator [length]=\"total\" [pageSize]=\"pageSize\" (page)=\"pageHandler($event)\" [pageSizeOptions]=\"pageSizeOptions\"> </mat-paginator>\n</mat-toolbar>\n`,\n  styles: [`mat-toolbar header{flex:1}.mat-paginator{background:0 0}`]\n})\nexport class GridToolbarComponent implements OnInit {\n  @Input() page = 0;\n  @Output() pageChange = new EventEmitter<PageEvent>();\n  @Input() total = 0;\n  @Input() pageSize = 10;\n  @Input() pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  pageHandler($event: PageEvent) {\n    this.pageSize = $event.pageSize;\n    this.page = $event.pageIndex;\n    this.pageChange.emit($event);\n  }\n}\n","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { GridComponent } from '../grid.component';\n\n@Component({\n  selector: 'instant-grid-row-menu',\n  template: `<mat-menu #rowMenu=\"matMenu\">\n  <ng-content></ng-content>\n</mat-menu>\n\n<button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"rowMenu\">\n  <i class=\"fa far fa-fw fa-{{ icon }}\"></i>\n</button>\n`,\n  styles: [`:host{position:relative}mat-card{position:absolute;z-index:100;right:0}`]\n})\nexport class GridRowMenuComponent implements OnInit {\n  @Input() row;\n  @Input() icon = 'ellipsis-v';\n\n  showMenu = false;\n\n  constructor(private grid: GridComponent) { }\n\n  ngOnInit() { }\n\n  @HostListener('document:click', ['$event'])\n  onClick($event) {\n    // Find all header cells\n    [].slice.call(this.grid.elRef.nativeElement.querySelectorAll('mat-cell.mat-column-actions'))\n      // Filter away current target\n      .filter(b => !b.contains($event.target))\n      // If any row action (not including current target) is marked as open, close it.\n      .forEach(cell => {\n        const row = cell.closest('mat-row');\n        const index = [].slice.call(row.closest('mat-table').children).indexOf(row) - 1; // - 1 because header is also a child.\n        this.grid.dataSource.db.dataSnapshot[index].showMenu = false; // Find row object in database snapshot, and mark it closed.\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport {\n  MatTableModule, MatSortModule, MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatPaginatorModule, MatMenuModule\n} from '@angular/material';\n\nimport { GridComponent } from './grid.component';\nimport { ColumnDirective } from './column.directive';\nimport { GridToolbarComponent } from './toolbar/grid-toolbar.component';\nimport { GridRowMenuComponent } from './row-menu/grid-row-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    MatTableModule,\n    MatSortModule,\n    MatInputModule,\n    MatCardModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n  ],\n  declarations: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ],\n  exports: [ GridComponent, ColumnDirective, GridToolbarComponent, GridRowMenuComponent ]\n})\nexport class GridModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, Params, ActivatedRoute, PRIMARY_OUTLET } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface IBreadcrumb {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  selector: 'instant-breadcrumb',\n  template: `<a [routerLink]=\"['/']\"><i class=\"fa far fa-fw fa-home\"></i></a>\n<a *ngFor=\"let route of routeMap\" [routerLink]=\"[route.url]\">{{ route.label }}</a>\n`,\n  styles: [`:host{flex:1}`]\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n\n  routeMap: IBreadcrumb[];\n  subscriptions: Subscription[] = [];\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.subscriptions.push(this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(nav => {\n      console.log('url changed');\n      const root: ActivatedRoute = this.route.root;\n      this.routeMap = this.getBreadcrumbs(root);\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => { if (s) { s.unsubscribe(); } });\n  }\n\n  /**\n   * Returns array of IBreadcrumb objects that represent the breadcrumb\n   *\n   * @param route\n   * @param url\n   * @param breadcrumbs\n   */\n  private getBreadcrumbs(route: ActivatedRoute, url: string= '', breadcrumbs: IBreadcrumb[]= []): IBreadcrumb[] {\n    const ROUTE_DATA_BREADCRUMB = 'breadcrumb';\n\n    // get the child routes\n    const children: ActivatedRoute[] = route.children;\n\n    // return if there are no more children\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    // iterate over each children\n    for (const child of children) {\n      // verify primary route\n      if (child.outlet !== PRIMARY_OUTLET) {\n        continue;\n      }\n\n      // verify the custom data property \"breadcrumb\" is specified on the route\n      if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\n        return this.getBreadcrumbs(child, url, breadcrumbs);\n      }\n\n      // get the route's URL segment\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\n\n      // append route URL to URL\n      url += `/${routeURL}`;\n\n      // add breadcrumb\n      const breadcrumb: IBreadcrumb = {\n        label: child.snapshot.data[ROUTE_DATA_BREADCRUMB],\n        params: child.snapshot.params,\n        url: url\n      };\n      breadcrumbs.push(breadcrumb);\n\n      // recursive\n      return this.getBreadcrumbs(child, url, breadcrumbs);\n    }\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolbarService {\n\n  actionTemplate: TemplateRef<any>;\n\n  constructor() { }\n\n}\n","import { Component, ContentChildren, TemplateRef } from '@angular/core';\nimport { FormActionsDefDirective } from './form-actions-def.directive';\nimport { ToolbarService } from '../toolbar.service';\n\n@Component({\n  selector: 'instant-form-actions',\n  template: `<ng-container *ngIf=\"actionsRef; else defaultTemplate\">\n  <ng-container *ngTemplateOutlet=\"actionsRef\"></ng-container>\n</ng-container>\n\n<ng-template #defaultTemplate></ng-template>\n`,\n  styles: [``]\n})\nexport class FormActionsComponent {\n\n  get actionsRef(): TemplateRef<any> { return this.toolbarService.actionTemplate; }\n\n  constructor(private toolbarService: ToolbarService) { }\n\n}\n","import { Directive, TemplateRef, OnInit, OnDestroy } from '@angular/core';\nimport { ToolbarService } from '../toolbar.service';\n\n@Directive({\n  selector: '[instantFormActionsDef]'\n})\nexport class FormActionsDefDirective implements OnInit, OnDestroy {\n  constructor(public template: TemplateRef<any>, private toolbar: ToolbarService) { }\n\n  ngOnInit() {\n    this.toolbar.actionTemplate = this.template;\n  }\n\n  ngOnDestroy() {\n    this.toolbar.actionTemplate = null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { FormActionsComponent } from './form-actions/form-actions.component';\nimport { FormActionsDefDirective } from './form-actions/form-actions-def.directive';\nimport { ToolbarService } from './toolbar.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\n  exports: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\n  providers: [ToolbarService]\n})\nexport class ToolbarModule { }\n"],"names":["filter"],"mappings":"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"}
