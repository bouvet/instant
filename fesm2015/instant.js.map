{"version":3,"file":"instant.js.map","sources":["ng://instant/lib/utils/debounce.ts","ng://instant/lib/grid/datasource.ts","ng://instant/lib/grid/filter-option/abstract-filter-option.ts","ng://instant/lib/grid/filter-option/default-filter-option.ts","ng://instant/lib/grid/filter-option/date-filter-option.ts","ng://instant/lib/grid/column.directive.ts","ng://instant/lib/grid/grid.component.ts","ng://instant/lib/grid/toolbar/grid-toolbar.component.ts","ng://instant/lib/grid/row-menu/grid-row-menu.component.ts","ng://instant/lib/grid/grid.module.ts","ng://instant/lib/toolbar/breadcrumb/breadcrumb.component.ts","ng://instant/lib/toolbar/toolbar.service.ts","ng://instant/lib/toolbar/form-actions/form-actions.component.ts","ng://instant/lib/toolbar/form-actions/form-actions-def.directive.ts","ng://instant/lib/toolbar/toolbar.module.ts"],"sourcesContent":["export const debounce = function (func, wait = 300, immediate = false) {\r\n  let timeout;\r\n  return function(...args) {\r\n    const context = this;\r\n    const later = () => {\r\n      timeout = null;\r\n      if (!immediate) { func.apply(context, args); }\r\n    };\r\n    const callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) { func.apply(context, args); }\r\n  };\r\n};\r\n","import { EventEmitter } from '@angular/core';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { Sort } from '@angular/material';\r\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\r\nimport { ColumnFilter } from './column.directive';\r\nimport { debounce } from '../utils/debounce';\r\n\r\nexport interface ChangeEvent {\r\n  [event: string]: {\r\n    active: string,\r\n    direction?: 'asc' | 'desc' | '',\r\n    filter?: any\r\n  };\r\n}\r\n\r\nexport interface Filter {\r\n  [col: string]: any;\r\n}\r\n\r\nexport interface Sorter {\r\n  [col: string]: 'asc' | 'desc' | '';\r\n}\r\n\r\n/**\r\n * This is the object the Mat Table actually uses.\r\n * It holds an `InstantDatabase` object, and deliveres\r\n * living data from this object to the grid.\r\n */\r\nexport class InstantDataSource<T> extends DataSource<T> {\r\n  constructor(public db: InstantDatabase<T>) {\r\n    super();\r\n  }\r\n  connect(): Observable<T[]> {\r\n    return this.db.dataChange;\r\n  }\r\n  disconnect() {\r\n    this.db.onDestroy();\r\n  }\r\n}\r\n\r\n/**\r\n * An object responsible for listening for user changes in\r\n * the grid, and modifying the data accordingly.\r\n *\r\n * Implementors should listen for events in the `onClientChange`\r\n * method and delivar data to the `dataChange` Subject.\r\n */\r\nexport abstract class InstantDatabase<T> {\r\n  sortChange: EventEmitter<Sort>;\r\n  private sortCache: Sorter = {};\r\n  private _sortSubscriber: Subscription;\r\n\r\n  filterChange: Observable<ColumnFilter> = new BehaviorSubject(null);\r\n  private filterCache: Filter = {};\r\n  private _filterSubscriber: Subscription;\r\n\r\n  dataChange: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\r\n  dataSnapshot;\r\n  private _dataChangeSubscriber: Subscription;\r\n  private dataReader = debounce(this.onRead, 100);\r\n\r\n  onInit() {\r\n    this.onRead();\r\n    this._dataChangeSubscriber = this.dataChange.subscribe(data => this.dataSnapshot = data);\r\n  }\r\n  onDestroy() {\r\n    this._dataChangeSubscriber.unsubscribe();\r\n    this._sortSubscriber.unsubscribe();\r\n    this._filterSubscriber.unsubscribe();\r\n  }\r\n  onRead(sort?: Sorter, filter?: Filter) {}\r\n\r\n  _configure(args: Partial<InstantDatabase<T>>) {\r\n    Object.assign(this, args);\r\n\r\n    // On any changes, read data\r\n    this._sortSubscriber = this.sortChange.subscribe(sort => {\r\n      this.sortCache = {}; // Reset always. Multiple column sort is NOT supported\r\n      this.sortCache[sort.active] = sort.direction;\r\n      this.dataReader(this.sortCache, this.filterCache);\r\n    });\r\n    this._filterSubscriber = this.filterChange.subscribe(filter => {\r\n      this.filterCache[filter.active] = filter.filter;\r\n      this.dataReader(this.sortCache, this.filterCache);\r\n    });\r\n\r\n    // Attached to a grid. Run init\r\n    if (this.onInit) { this.onInit(); }\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","export class AbstractFilterOption {\r\n  attribute: string = null;\r\n  lookupEntity: string = null;\r\n  lookupAttribute: string = null;\r\n  dataType: string = null;\r\n  operator: string = null;\r\n  ignoreCase: boolean = null;\r\n  upperCase: boolean = null;\r\n}\r\n","import {AbstractFilterOption} from './abstract-filter-option';\r\n\r\nexport class DefaultFilterOption extends AbstractFilterOption {\r\n  key: any = null;\r\n}\r\n","import {AbstractFilterOption} from './abstract-filter-option';\r\n\r\nexport class DateFilterOption extends AbstractFilterOption {\r\n  fromDate: Date = null;\r\n  toDate: Date = null;\r\n  days: number = null;\r\n}\r\n","import { Input, Directive, TemplateRef, ContentChild, OnInit, ViewChild } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport {DefaultFilterOption} from './filter-option/default-filter-option';\r\nimport {DateFilterOption} from './filter-option/date-filter-option';\r\nimport {DEFAULT_PACKAGE_URL_PROVIDER} from \"@angular/platform-browser-dynamic/src/compiler_factory\";\r\n\r\nexport interface ColumnFilter {\r\n  active: string;\r\n  filter: any;\r\n}\r\n\r\n/**\r\n * Column definition for the instant-grid.\r\n * Defines a set of cells and optional filters available for a table column.\r\n *\r\n * 22.06.2019 ofsfrvor - Added support for different filter operators.\r\n *                       Added other input members (attribute, lookAttribute, lookupEntity, dataType, operator)\r\n *                       enabling control of the filter from the HTML tag.\r\n * 23.06.2019 ofsfrvor - Added dateFilterTemplate. Activate dateFilterTemplate by setting input member templateName.\r\n * 24.06.2019 ofsfrvor - If dataType is Long, Integer or BigDecimal, set input field type to number. Set default dataType to String.\r\n *                       Using moment to convert dateString to date object.\r\n * 22.02.2022 ofsfrvor - Added boolean input members ignoreCase and upperCase.\r\n *\r\n * TODO Automatically force cursor to input field when template is opened\r\n * TODO Need to implement language translation for the operator labels.\r\n * TODO List filter options are not unchecked when list type filter is removed\r\n */\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'instant-column'\r\n})\r\nexport class ColumnDirective implements OnInit {\r\n\r\n  public static readonly DEFAULT_FILTER_TEMPLATE: string = 'defaultFilterTemplate';\r\n  public static readonly DATE_FILTER_TEMPLATE: string = 'dateFilterTemplate';\r\n\r\n  // Inputs\r\n  @Input() templateName: string = ColumnDirective.DEFAULT_FILTER_TEMPLATE;\r\n  @Input() name: string;  // Unique identifier for this column.\r\n  @Input() label: string; // Defaults to the identifier of column\r\n  @Input() filterable = true;\r\n  @Input() sortable = true;\r\n  @Input() sticky = false;\r\n  @Input('instant-style') instantStyle = {};\r\n  @Input() operators: string[];\r\n  @Input() attribute: string;\r\n  @Input() lookupAttribute: string;\r\n  @Input() lookupEntity: string;\r\n  @Input() dataType: string = 'String';\r\n  @Input() operator: string;\r\n  @Input() ignoreCase: boolean;\r\n  @Input() upperCase: boolean;\r\n\r\n  // Template refs\r\n  @ContentChild('filter') filterRef: TemplateRef<any>;\r\n  @ContentChild('cell') cellRef: TemplateRef<any>;\r\n\r\n  // Filter properties\r\n  filterOpen: boolean;\r\n  isFilterSet: boolean = false;\r\n  filter = new ReplaySubject<ColumnFilter>();\r\n  filterValue: any;\r\n  oldFilter: any;\r\n  initialOperator: string = null;\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(\r\n    private datePipe: DatePipe\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.label == null) {\r\n      this.label = this.name;\r\n    }\r\n\r\n    if (this.templateName == null) {\r\n      this.templateName = ColumnDirective.DEFAULT_FILTER_TEMPLATE;\r\n    }\r\n\r\n    // Set default operator list (if not already set)\r\n    switch (this.templateName) {\r\n      case ColumnDirective.DEFAULT_FILTER_TEMPLATE:\r\n        this.operators = this.operators ? this.operators : ['CONTAINS', 'STARTS_WITH', 'ENDS_WITH', 'EQUALS', 'NOT_EQUALS', 'MATCH_WORDS', 'IS_NULL', 'IS_NOT_NULL'];\r\n        this.operator = this.operator ? this.operator : 'CONTAINS';\r\n        break;\r\n      case ColumnDirective.DATE_FILTER_TEMPLATE:\r\n        this.operators = this.operators ? this.operators : ['IS_NULL', 'IS_NOT_NULL'];\r\n        this.operator = this.operator ? this.operator : 'EQUALS';\r\n        break;\r\n      default:\r\n        this.operators = null;\r\n    }\r\n\r\n    this.initialOperator = this.operator;\r\n  }\r\n\r\n  /**\r\n   * This method is invoked directly from the filter template.\r\n   * Any custom implementation of a column filter, must fire this\r\n   * method when user has made choices.\r\n   *\r\n   * @param filter The filter as received from the filter template\r\n   */\r\n  setFilter(filter: any, noEmit: boolean = false) {\r\n    if (filter) {\r\n      if (typeof(filter) === 'object') {\r\n        // Filter is object => override filter attributes\r\n        this.attribute = filter.hasOwnProperty('attribute') && filter.attribute && filter.attribute !== this.attribute ? filter.attribute : this.attribute;\r\n        this.lookupAttribute = filter.hasOwnProperty('lookupAttribute') && filter.lookupAttribute && filter.lookupAttribute !== this.lookupAttribute ? filter.lookupAttribute : this.lookupAttribute;\r\n        this.lookupEntity = filter.hasOwnProperty('lookupEntity') && filter.lookupEntity && filter.lookupEntity !== this.lookupEntity ? filter.lookupEntity : this.lookupEntity;\r\n        this.operator = filter.hasOwnProperty('operator') && filter.operator && filter.operator !== this.operator ? filter.operator : this.operator;\r\n        this.dataType = filter.hasOwnProperty('dataType') && filter.dataType && filter.dataType !== this.dataType ? filter.dataType : this.dataType;\r\n        this.ignoreCase = filter.hasOwnProperty('ignoreCase') && filter.ignoreCase && filter.ignoreCase !== this.ignoreCase ? filter.ignoreCase : this.ignoreCase;\r\n        this.upperCase = filter.hasOwnProperty('upperCase') && filter.upperCase && filter.upperCase !== this.upperCase ? filter.upperCase : this.upperCase;\r\n      } else {\r\n        // Filter is primitive => convert to default filter option\r\n        filter = this.convertPrimitiveToFilter(filter);\r\n      }\r\n    }\r\n\r\n    this.setFilterValue(filter, noEmit);\r\n\r\n    // Have to do a null check on filter if the filter is to be emitted\r\n    this.isFilterSet = noEmit === true ? filter !== null : true;\r\n  }\r\n\r\n  convertPrimitiveToFilter(key: string): any {\r\n    const filter: DefaultFilterOption = new DefaultFilterOption();\r\n    filter.attribute = this.attribute;\r\n    filter.lookupAttribute = this.lookupAttribute;\r\n    filter.lookupEntity = this.lookupEntity;\r\n    filter.operator = this.operator;\r\n    filter.key = key;\r\n    filter.dataType = this.dataType;\r\n    filter.ignoreCase = this.ignoreCase;\r\n    filter.upperCase = this.upperCase;\r\n\r\n    return filter;\r\n  }\r\n\r\n  setFilterValue(filter: any, noEmit: boolean = false) {\r\n    if ((filter !== this.oldFilter) || (filter === null)) {\r\n      // Clone current filter to old filter\r\n      this.oldFilter = Object.assign({}, this.filterValue);\r\n      this.filterValue = filter;\r\n      if (!noEmit) {\r\n        this.filter.next({active: this.name, filter: filter});\r\n      }\r\n    }\r\n\r\n    this.filterOpen = false;\r\n  }\r\n\r\n  setDays(days: number) {\r\n    if (this.templateName !== 'dateFilterTemplate') {\r\n      return;\r\n    }\r\n\r\n    const filter: any = this.filterValue ? this.filterValue : new DateFilterOption();\r\n    filter.attribute = this.attribute;\r\n    filter.lookupAttribute = this.lookupAttribute;\r\n    filter.lookupEntity = this.lookupEntity;\r\n    filter.operator = this.operator;\r\n    filter.dataType = this.dataType;\r\n    filter.ignoreCase = this.ignoreCase;\r\n    filter.upperCase = this.upperCase;\r\n    filter.days = days;\r\n    this.setFilterValue(filter);\r\n  }\r\n\r\n  setFromDate(date: Date) {\r\n    if (this.templateName !== 'dateFilterTemplate') {\r\n      return;\r\n    }\r\n\r\n    const filter: any = this.filterValue ? this.filterValue : new DateFilterOption();\r\n    filter.attribute = this.attribute;\r\n    filter.lookupAttribute = this.lookupAttribute;\r\n    filter.lookupEntity = this.lookupEntity;\r\n    filter.operator = this.operator;\r\n    filter.dataType = this.dataType;\r\n    filter.ignoreCase = this.ignoreCase;\r\n    filter.upperCase = this.upperCase;\r\n    filter.fromDate = this.toDbDateString(date);\r\n    this.setFilterValue(filter);\r\n  }\r\n\r\n  setToDate(date: Date) {\r\n    if (this.templateName !== 'dateFilterTemplate') {\r\n      return;\r\n    }\r\n\r\n    const filter: any = this.filterValue ? this.filterValue : new DateFilterOption();\r\n    filter.attribute = this.attribute;\r\n    filter.lookupAttribute = this.lookupAttribute;\r\n    filter.lookupEntity = this.lookupEntity;\r\n    filter.operator = this.operator;\r\n    filter.dataType = this.dataType;\r\n    filter.ignoreCase = this.ignoreCase;\r\n    filter.upperCase = this.upperCase;\r\n    filter.toDate = this.toDbDateString(date);\r\n    this.setFilterValue(filter);\r\n  }\r\n\r\n  private toDbDateString(date: Date): string {\r\n    if (date == null) {\r\n      return null;\r\n    }\r\n\r\n    const dateString = this.datePipe.transform(date, 'dd-MM-yyyy');\r\n    return dateString;\r\n  }\r\n\r\n\r\n  setOperator(operator: string) {\r\n    this.operator = operator;\r\n    if (this.filterValue && (typeof(this.filterValue) === 'object')) {\r\n      this.filterValue.operator = operator;\r\n    } else {\r\n      this.filterValue = this.convertPrimitiveToFilter(null);\r\n    }\r\n    this.setFilterValue(this.filterValue);\r\n    this.isFilterSet = true;\r\n  }\r\n\r\n  removeFilter() {\r\n    // Default operator back to CONTAINS\r\n    this.operator = this.initialOperator ? this.initialOperator : 'CONTAINS';\r\n    this.setFilterValue(null);\r\n    this.isFilterSet = false;\r\n  }\r\n}\r\n\r\n\r\n","import 'element-closest';\r\nimport {\r\n  Component,\r\n  Input,\r\n  ContentChildren,\r\n  ViewChild,\r\n  OnDestroy,\r\n  AfterContentInit,\r\n  HostListener,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\nimport {MatSort, MatMenuTrigger, MatDatepickerInputEvent} from '@angular/material';\r\nimport { Subscription, merge } from 'rxjs';\r\nimport { InstantDataSource } from './datasource';\r\nimport { ColumnDirective } from './column.directive';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\nexport interface RowClickEvent {\r\n  data: any;\r\n  colName: string;\r\n}\r\n@Component({\r\n  selector: 'instant-grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.scss']\r\n})\r\nexport class GridComponent implements AfterContentInit, OnDestroy {\r\n  @Input() dataSource: InstantDataSource<any>;\r\n  @Input() selectedIndex: number;\r\n  @Input() sticky: boolean;\r\n  @Input() rowAttributes: Array<any>;\r\n  @ContentChildren(ColumnDirective) columns: ColumnDirective[];\r\n  @Output() rowClicked = new EventEmitter<RowClickEvent>();\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  _displayedColumns: string[];\r\n  @Input()\r\n  set displayedColumns(v) {\r\n    this._displayedColumns = v;\r\n  }\r\n  get displayedColumns(): string[] {\r\n    return (this._displayedColumns =\r\n      this._displayedColumns ||\r\n      (this.columns ? this.columns.map(c => c.name) : null));\r\n  }\r\n  private subscriptions: Subscription[];\r\n\r\n  constructor(\r\n    public elRef: ElementRef\r\n  ) {}\r\n\r\n  ngAfterContentInit() {\r\n    if (this.columns && this.columns.length) {\r\n      this.dataSource.db._configure({\r\n        sortChange: this.sort.sortChange,\r\n        filterChange: merge(...this.columns.map(c => c.filter))\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions && this.subscriptions.length) {\r\n      this.subscriptions.map(f => f.unsubscribe());\r\n    }\r\n  }\r\n\r\n  onRowClicked(row, $event) {\r\n    if ($event.target.closest('instant-grid-row-menu') === null) {\r\n      const cellName = [].slice\r\n        .call($event.target.closest('td').classList)\r\n        .find(c => c.indexOf('mat-column-') > -1)\r\n        .substr('mat-column-'.length);\r\n\r\n      this.rowClicked.emit({ data: row, colName: cellName });\r\n    }\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onClick($event) {\r\n    const headersToClose: string[] = [].slice\r\n      // Find all header cells\r\n      .call(this.elRef.nativeElement.querySelectorAll('th'))\r\n      // Filter away current target\r\n      .filter(b => !b.contains($event.target))\r\n      // Get the name of the column\r\n      .map(b =>\r\n        [].slice\r\n          .call(b.classList)\r\n          .find(c => c.indexOf('mat-column-') > -1)\r\n          .substr('mat-column-'.length)\r\n      );\r\n\r\n    // If any columns (not including current target) is marked as open close it.\r\n    this.columns\r\n      .filter(c => headersToClose.includes(c.name))\r\n      .forEach(c => (c.filterOpen = false));\r\n  }\r\n\r\n  menuOpened(col: ColumnDirective) {\r\n    if (!col) {\r\n      return;\r\n    }\r\n\r\n    let filterInput: HTMLElement = null;\r\n\r\n    switch (col.templateName) {\r\n      case ColumnDirective.DEFAULT_FILTER_TEMPLATE:\r\n        filterInput = document.getElementById('defaultFilterInput');\r\n        break;\r\n      case ColumnDirective.DATE_FILTER_TEMPLATE:\r\n        filterInput = document.getElementById('dateFilterInput');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!filterInput) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      filterInput.focus();\r\n    }, 500);\r\n  }\r\n\r\n  checkClose($event: KeyboardEvent, menuTrigger: MatMenuTrigger) {\r\n    if ($event.key === 'Enter') {\r\n      menuTrigger.closeMenu();\r\n    }\r\n  }\r\n\r\n  onFilterChange($event, col) {\r\n    col.setFilter($event.target.value);\r\n  }\r\n\r\n  onOperatorChange(operator: string, col) {\r\n    col.setOperator(operator);\r\n  }\r\n\r\n  onFromDateChange($event, col) {\r\n    col.setFromDate($event ? $event.target.value : null);\r\n  }\r\n\r\n  onToDateChange($event, col) {\r\n    col.setToDate($event ? $event.target.value : null);\r\n  }\r\n\r\n  onDaysChange($event, col) {\r\n    col.setDays($event ? $event.target.value : null);\r\n  }\r\n\r\n  getFilterValue(col) {\r\n    if (col.filterValue) {\r\n      if (typeof col.filterValue === 'object') {\r\n        return col.filterValue.key;\r\n      }\r\n      return col.filterValue;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  toDate(dateObject: any): Date {\r\n    if (dateObject == null) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof dateObject === 'string') {\r\n      const date: Date = moment(dateObject, 'DD-MM-YYYY').toDate();\r\n      return date;\r\n    }\r\n\r\n    if (dateObject) {\r\n      const date: Date = new Date(dateObject);\r\n      return date;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  toNumber(value: any): number {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    const type: string = typeof(value);\r\n\r\n    switch (type) {\r\n      case 'string':\r\n        const stringValue = value.replace(',', '.');\r\n        if (!stringValue || Number.isNaN(+stringValue)) {\r\n          return null;\r\n        }\r\n        const n: number = +stringValue;\r\n        return n;\r\n      case 'number':\r\n        return value;\r\n      case 'boolean':\r\n        return (value === true) ? 1 : 0;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  getFromDate(col): Date {\r\n    if (col.filterValue) {\r\n      if (typeof col.filterValue === 'object') {\r\n        const date: Date = this.toDate(col.filterValue.fromDate);\r\n        return date;\r\n      }\r\n      return new Date(col.filterValue);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getToDate(col): Date {\r\n    if (col.filterValue) {\r\n      if (typeof col.filterValue === 'object') {\r\n        const date: Date = this.toDate(col.filterValue.toDate);\r\n        return date;\r\n      }\r\n      return new Date(col.filterValue);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getDays(col): number {\r\n    if (col.filterValue) {\r\n      if (typeof col.filterValue === 'object') {\r\n        const days: number = this.toNumber(col.filterValue.days);\r\n        return days;\r\n      }\r\n      return this.toNumber(col.filterValue);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getOperator(col) {\r\n    console.log('instant grid component - getOperator ' + col.name);\r\n    if (!col || !col.hasOwnProperty('operator')) {\r\n      return null;\r\n    }\r\n    return col.operator;\r\n  }\r\n\r\n  getRowClasses(index: number) {\r\n    let classes: string[] = [];\r\n\r\n    if (index === this.selectedIndex) {\r\n      classes.push('highlight');\r\n    }\r\n\r\n    if (this.rowAttributes && this.rowAttributes.length > 0) {\r\n      const attr = this.rowAttributes;\r\n      for (let i = 0; i < attr.length; i++) {\r\n        if (attr[i]['index'] === index) {\r\n          if (attr[i]['class'] && attr[i]['class'].length > 0) {\r\n            classes = classes.concat(attr[i]['class']);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return classes.join(' ');\r\n  }\r\n\r\n  getRowStyles(index: number) {\r\n    let styles: string[] = [];\r\n\r\n    if (this.rowAttributes && this.rowAttributes.length > 0) {\r\n      const attr = this.rowAttributes;\r\n      for (let i = 0; i < attr.length; i++) {\r\n        if (attr[i]['index'] === index) {\r\n          if (attr[i]['style'] && attr[i]['style'].length > 0) {\r\n            styles = styles.concat(attr[i]['style']);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return styles.join(' ');\r\n  }\r\n\r\n  removeFilter(col) {\r\n    col.removeFilter();\r\n  }\r\n\r\n  removeFilters() {\r\n    console.log('instant grid component - removeFilters');\r\n    this.columns.forEach(col => {\r\n      col.removeFilter();\r\n    });\r\n  }\r\n\r\n  reload() {\r\n    console.log('instant grid component - reload');\r\n    this.columns.forEach((col,index) => {\r\n      if (index === 0) {\r\n        col.removeFilter();\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { PageEvent } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'instant-grid-toolbar',\r\n  templateUrl: './grid-toolbar.component.html',\r\n  styleUrls: ['./grid-toolbar.component.scss']\r\n})\r\nexport class GridToolbarComponent implements OnInit {\r\n  @Input() page = 0;\r\n  @Output() pageChange = new EventEmitter<PageEvent>();\r\n  @Input() total = 0;\r\n  @Input() pageSize = 10;\r\n  @Input() pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  pageHandler($event: PageEvent) {\r\n    this.pageSize = $event.pageSize;\r\n    this.page = $event.pageIndex;\r\n    this.pageChange.emit($event);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, HostListener } from '@angular/core';\r\nimport { GridComponent } from '../grid.component';\r\n\r\n@Component({\r\n  selector: 'instant-grid-row-menu',\r\n  templateUrl: './grid-row-menu.component.html',\r\n  styleUrls: ['./grid-row-menu.component.scss']\r\n})\r\nexport class GridRowMenuComponent implements OnInit {\r\n  @Input() row;\r\n  @Input() icon = 'ellipsis-v';\r\n\r\n  showMenu = false;\r\n\r\n  constructor(private grid: GridComponent) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onClick($event) {\r\n    // Find all header cells\r\n    [].slice.call(this.grid.elRef.nativeElement.querySelectorAll('mat-cell.mat-column-actions'))\r\n      // Filter away current target\r\n      .filter(b => !b.contains($event.target))\r\n      // If any row action (not including current target) is marked as open, close it.\r\n      .forEach(cell => {\r\n        const row = cell.closest('mat-row');\r\n        const index = [].slice.call(row.closest('mat-table').children).indexOf(row) - 1; // - 1 because header is also a child.\r\n        this.grid.dataSource.db.dataSnapshot[index].showMenu = false; // Find row object in database snapshot, and mark it closed.\r\n      });\r\n  }\r\n}\r\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\r\nimport {CommonModule, DatePipe} from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatTableModule, MatSortModule, MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatPaginatorModule,\r\n  MatMenuModule, MatRadioModule, MatDatepickerModule\r\n} from '@angular/material';\r\n\r\nimport { GridComponent } from './grid.component';\r\nimport { ColumnDirective } from './column.directive';\r\nimport { GridToolbarComponent } from './toolbar/grid-toolbar.component';\r\nimport { GridRowMenuComponent } from './row-menu/grid-row-menu.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatPaginatorModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n  ],\r\n  declarations: [\r\n    GridComponent,\r\n    ColumnDirective,\r\n    GridToolbarComponent,\r\n    GridRowMenuComponent\r\n  ],\r\n  exports: [\r\n    GridComponent,\r\n    ColumnDirective,\r\n    GridToolbarComponent,\r\n    GridRowMenuComponent\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class GridModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd, Params, ActivatedRoute, PRIMARY_OUTLET } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nexport interface IBreadcrumb {\r\n  label: string;\r\n  params: Params;\r\n  url: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'instant-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss']\r\n})\r\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\r\n\r\n  routeMap: IBreadcrumb[];\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.push(this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(nav => {\r\n      console.log('url changed');\r\n      const root: ActivatedRoute = this.route.root;\r\n      this.routeMap = this.getBreadcrumbs(root);\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(s => { if (s) { s.unsubscribe(); } });\r\n  }\r\n\r\n  /**\r\n   * Returns array of IBreadcrumb objects that represent the breadcrumb\r\n   *\r\n   * @param route\r\n   * @param url\r\n   * @param breadcrumbs\r\n   */\r\n  private getBreadcrumbs(route: ActivatedRoute, url: string= '', breadcrumbs: IBreadcrumb[]= []): IBreadcrumb[] {\r\n    const ROUTE_DATA_BREADCRUMB = 'breadcrumb';\r\n\r\n    // get the child routes\r\n    const children: ActivatedRoute[] = route.children;\r\n\r\n    // return if there are no more children\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    // iterate over each children\r\n    for (const child of children) {\r\n      // verify primary route\r\n      if (child.outlet !== PRIMARY_OUTLET) {\r\n        continue;\r\n      }\r\n\r\n      // verify the custom data property \"breadcrumb\" is specified on the route\r\n      if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {\r\n        return this.getBreadcrumbs(child, url, breadcrumbs);\r\n      }\r\n\r\n      // get the route's URL segment\r\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\r\n\r\n      // append route URL to URL\r\n      url += `/${routeURL}`;\r\n\r\n      // add breadcrumb\r\n      const breadcrumb: IBreadcrumb = {\r\n        label: child.snapshot.data[ROUTE_DATA_BREADCRUMB],\r\n        params: child.snapshot.params,\r\n        url: url\r\n      };\r\n      breadcrumbs.push(breadcrumb);\r\n\r\n      // recursive\r\n      return this.getBreadcrumbs(child, url, breadcrumbs);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolbarService {\r\n\r\n  actionTemplate: TemplateRef<any>;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, ContentChildren, TemplateRef } from '@angular/core';\r\nimport { FormActionsDefDirective } from './form-actions-def.directive';\r\nimport { ToolbarService } from '../toolbar.service';\r\n\r\n@Component({\r\n  selector: 'instant-form-actions',\r\n  templateUrl: './form-actions.component.html',\r\n  styleUrls: ['./form-actions.component.scss']\r\n})\r\nexport class FormActionsComponent {\r\n\r\n  get actionsRef(): TemplateRef<any> { return this.toolbarService.actionTemplate; }\r\n\r\n  constructor(private toolbarService: ToolbarService) { }\r\n\r\n}\r\n","import { Directive, TemplateRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { ToolbarService } from '../toolbar.service';\r\n\r\n@Directive({\r\n  selector: '[instantFormActionsDef]'\r\n})\r\nexport class FormActionsDefDirective implements OnInit, OnDestroy {\r\n  constructor(public template: TemplateRef<any>, private toolbar: ToolbarService) { }\r\n\r\n  ngOnInit() {\r\n    this.toolbar.actionTemplate = this.template;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.toolbar.actionTemplate = null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\r\nimport { FormActionsComponent } from './form-actions/form-actions.component';\r\nimport { FormActionsDefDirective } from './form-actions/form-actions-def.directive';\r\nimport { ToolbarService } from './toolbar.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\r\n  exports: [BreadcrumbComponent, FormActionsComponent, FormActionsDefDirective],\r\n  providers: [ToolbarService]\r\n})\r\nexport class ToolbarModule { }\r\n"],"names":["filter"],"mappings":"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"}
